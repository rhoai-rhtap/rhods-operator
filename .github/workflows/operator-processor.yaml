name: Operator Processor

on:
  workflow_dispatch:
  push:
    branches:
      - 'rhoai-*'
    paths:
      - build/operator-nudging.yaml


env:
  GITHUB_ORG: rhoai-rhtap
  RESOLVE_CONFLICTS_FOR: build/operator-nudging.yaml

permissions:
  contents: write

jobs:
  operator-processor:
    if: ${{ github.event_name == 'workflow_dispatch' || ( github.event_name == 'push' && github.event.commits[0].author.name == 'konflux-internal-p02' ) }}
    runs-on: ubuntu-latest
    steps:
      - name: Fetch all manifests
        run: |
          echo "current dir = $(pwd)"
          ls
      - name: Checkout RBC repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.GITHUB_ORG }}/RHOAI-Build-Config
          ref: ${{ github.ref_name }}
          path: RBC
          sparse-checkout: |
            bundle/bundle-patch.yaml
          sparse-checkout-cone-mode: false
      - name: Fetch all manifests
        run: |
          echo "current dir = $(pwd)"
          ls
      - name: Git checkout utils
        uses: actions/checkout@v4
        with:
          repository: ${{ env.GITHUB_ORG }}/RHOAI-Konflux-Automation
          ref: main
          path: utils
          sparse-checkout: |
            utils/operator-processor
          sparse-checkout-cone-mode: false
      - name: Fetch all manifests
        run: |
          echo "current dir = $(pwd)"
          ls
      - name: Git checkout utils
        uses: actions/checkout@v4
        with:
          repository: ${{ env.GITHUB_ORG }}/rhods-operator
          ref: ${{ github.ref_name }}
          path: rhods-operator
          sparse-checkout: |
            build
          sparse-checkout-cone-mode: false
      - name: Fetch all manifests
        run: |
          echo "current dir = $(pwd)"
          ls
      - name: Install dependencies
        run: |
          os="$(uname -s | tr '[:upper:]' '[:lower:]')"
          arch="$(uname -m | sed 's/x86_64/amd64/')"
          yq_version="v4.44.3"
          yq_filename="yq-$yq_version"
          echo "-> Downloading yq" >&2
          curl -sSfLo "$yq_filename" "https://github.com/mikefarah/yq/releases/download/$yq_version/yq_${os}_${arch}"
          chmod +x $yq_filename
          ln -s $yq_filename yq
          cp $yq_filename /usr/local/bin/yq
  
          pip install -r utils/utils/operator-processor/requirements.txt
      - name: Fetch all manifests
        run: |
          echo "current dir = $(pwd)"
          ls
      - name: Execute Operator Processor
        env:
          BRANCH: ${{ github.ref_name }}
          RHOAI_QUAY_API_TOKEN: ${{ secrets.RHOAI_QUAY_API_TOKEN }}
        run: |
          PATCH_YAML_PATH=RBC/bundle/bundle-patch.yaml
          OPERANDS_MAP_PATH=rhods-operator/build/operands-map.yaml
          NUDGING_YAML_PATH=rhods-operator/build/operator-nudging.yaml
          MANIFEST_CONFIG_PATH=rhods-operator/build/manifests-config.yaml
          
          python3 utils/utils/operator-processor/operator-processor.py  -op process-operator-yamls --patch-yaml-path ${PATCH_YAML_PATH} --operands-map-path ${OPERANDS_MAP_PATH} --nudging-yaml-path ${NUDGING_YAML_PATH} --manifest-config-path ${MANIFEST_CONFIG_PATH} --rhoai-version ${BRANCH}
          
          echo "----- NUDGING_YAML ------"
          cat $NUDGING_YAML_PATH
          echo "----- OPERANDS_MAP ------"
          cat $OPERANDS_MAP_PATH
          echo "----- MANIFEST_CONFIG ------"
          cat $MANIFEST_CONFIG_PATH
          echo "current dir = $(pwd)"
      - name: Fetch all manifests
        env:
          BRANCH: ${{ github.ref_name }}
        run: |
          echo "current dir = $(pwd)"
          MANIFEST_CONFIG_PATH=${{ github.workspace }}/rhods-operator/build/manifests-config.yaml
          mkdir -p manifests
          cd manifests
          while IFS= read -r value;
          do
              value=${value/- /}
              component=$value
              if [[ -n $component ]]
              then	
                  git_url=$(value="$value" yq '.map[strenv(value)]["git.url"]' ${MANIFEST_CONFIG_PATH})
                  git_commit=$(value="$value" yq '.map[strenv(value)]["git.commit"]' ${MANIFEST_CONFIG_PATH})
                  src=$(value="$value" yq '.map[strenv(value)]["src"]' ${MANIFEST_CONFIG_PATH})
                  dest=$(value="$value" yq '.map[strenv(value)]["dest"]' ${MANIFEST_CONFIG_PATH})
                  
                  echo "component = $component"
                  echo "git_url = $git_url"
                  echo "git_commit = $git_commit"
                  echo "src = $src"
                  echo "dest = $dest"
          
                  mkdir -p $component
                  cd $component
          
                  git init
                  git remote add origin $git_url
                  git config core.sparseCheckout true
                  git config core.sparseCheckoutCone false
                  echo "$src" >> .git/info/sparse-checkout
                  git fetch --depth=1 origin ${BRANCH}
                  git checkout $git_commit
                  cd ../
                  echo "current dir = $(pwd)"
              fi
          done < <(yq e '.map | keys' ${MANIFEST_CONFIG_PATH} )
          tree
          
          

#      - name: Merge Feasibility Check
#        if: ${{ steps.changed-files.outputs.all_changed_files == 'build/operator-nudging.yaml' }}
#        id: merge-feasibility-check
#        run: |
#          # Declare variables
#          BASE_BRANCH=${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}}
#          HEAD_BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
#          VERSION=v${BASE_BRANCH/rhoai-/}
#          SUFFIX=${VERSION/./-}
#          echo "SUFFIX=$SUFFIX"
#          echo "HEAD_BRANCH=$HEAD_BRANCH"
#          REGEX="^Update.*-$SUFFIX to [0-9a-z]{1,40}$"
#
#          FEASIBLE=No
#          #Check if PR title is as per the convention
#          if [[ "${{ github.event.pull_request.title }}" =~ $REGEX ]]
#          then
#            FEASIBLE=Yes
#            echo "It's a valid PR to merge!"
#          else
#            echo "Insta-merge not configured to merge this PR, skipping."
#          fi
#          echo "FEASIBLE=$FEASIBLE" >> $GITHUB_OUTPUT
#          echo "BASE_BRANCH=$BASE_BRANCH" >> $GITHUB_OUTPUT
#          echo "HEAD_BRANCH=$HEAD_BRANCH" >> $GITHUB_OUTPUT
#
#      - name: Generate github-app token
#        id: app-token
#        uses: getsentry/action-github-app-token@v2
#        with:
#          app_id: ${{ secrets.RHOAI_DEVOPS_APP_ID }}
#          private_key: ${{ secrets.RHOAI_DEVOPS_APP_PRIVATE_KEY }}
#
#      - uses: Wandalen/wretry.action@master
#        if: ${{ steps.merge-feasibility-check.outputs.FEASIBLE == 'Yes' }}
#        with:
#          action: red-hat-data-services/insta-merge@main
#          retry_condition: steps._this.outputs.code == 0
#          attempt_limit: 5
#          github_token: ${{ steps.app-token.outputs.token }}
#          with: |
#            upstream_repo: "https://github.com/${GITHUB_ORG}/rhods-operator.git"
#            upstream_branch: "${{ steps.merge-feasibility-check.outputs.BASE_BRANCH }}"
#            downstream_repo: "https://github.com/${GITHUB_ORG}/rhods-operator.git"
#            downstream_branch: "${{ steps.merge-feasibility-check.outputs.HEAD_BRANCH }}"
#            token: ${{ steps.app-token.outputs.token }}
#            resolve_conflicts_for: "${RESOLVE_CONFLICTS_FOR}"
#            merge_args: "--no-edit"
#            pr_url: "${{ github.event.pull_request.html_url }}"
