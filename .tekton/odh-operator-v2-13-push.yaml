apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/rhoai-rhtap/rhods-operator?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    build.appstudio.openshift.io/build-nudge-files: "bundle/bundle-patch.yaml"
    pipelinesascode.tekton.dev/on-cel-expression: '"non-existent-file.non-existent-ext".pathChanged()
      && event == "push" && target_branch == "rhoai-2.13" && !"bundle/**".pathChanged()
      && !"Dockerfiles/bundle.Dockerfile".pathChanged() && (!"build/**".pathChanged()
      || "build/operands-map.yaml".pathChanged() || ".tekton/odh-operator-v2-13-push.yaml".pathChanged()
      ) && !".github/workflows/**".pathChanged()'
  creationTimestamp:
  labels:
    appstudio.openshift.io/application: rhoai-v2-13
    appstudio.openshift.io/component: odh-operator-v2-13
    pipelines.appstudio.openshift.io/type: build
  name: odh-operator-v2-13-on-push
  namespace: rhoai-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/rhoai/odh-rhel8-operator:{{target_branch}}
  - name: dockerfile
    value: Dockerfiles/Dockerfile.konflux
  - name: path-context
    value: .
  - name: prefetch-input
    value: '{"type": "gomod", "path": "."}'
  pipelineSpec:
    finally:
    - name: show-sbom
      params:
      - name: IMAGE_URL
        value: $(tasks.build-image-index.results.IMAGE_URL)
      taskRef:
        params:
        - name: name
          value: show-sbom
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-show-sbom:0.1@sha256:04f15cbce548e1db7770eee3f155ccb2cc0140a6c371dc67e9a34d83673ea0c0
        - name: kind
          value: task
        resolver: bundles
    - name: show-summary
      params:
      - name: pipelinerun-name
        value: $(context.pipelineRun.name)
      - name: git-url
        value: $(tasks.clone-repository.results.url)?rev=$(tasks.clone-repository.results.commit)
      - name: image-url
        value: $(params.output-image)
      - name: build-task-status
        value: $(tasks.build-image-index.status)
      taskRef:
        params:
        - name: name
          value: summary
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-summary:0.2@sha256:870d9a04d9784840a90b7bf6817cd0d0c4edfcda04b1ba1868cae625a3c3bfcc
        - name: kind
          value: task
        resolver: bundles
      workspaces:
      - name: workspace
        workspace: workspace
    - name: send-slack-notification
      params:
      - name: message
        value: "$(tasks.rhoai-init.results.slack-message-failure-text)"
      - name: secret-name
        value: rhoai-konflux-secret
      - name: key-name
        value: slack-webhook
      taskRef:
        params:
        - name: name
          value: slack-webhook-notification
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-slack-webhook-notification:0.1@sha256:dc17b70633363d78414b8c06dc1660d25742935f106a6116995638e1210c2730
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.status)
        operator: in
        values:
        - "Failed"

    params:
    - description: Source Repository URL
      name: git-url
      type: string
    - default: ""
      description: Revision of the Source Repository
      name: revision
      type: string
    - description: Fully Qualified Output Image
      name: output-image
      type: string
    - default: .
      description: Path to the source code of an application's component from where
        to build image.
      name: path-context
      type: string
    - default: Dockerfile
      description: Path to the Dockerfile inside the context specified by parameter
        path-context
      name: dockerfile
      type: string
    - default: "false"
      description: Force rebuild image
      name: rebuild
      type: string
    - default: "true"
      description: Skip checks against built image
      name: skip-checks
      type: string
    - default: "true"
      description: Execute the build with network isolation
      name: hermetic
      type: string
    - default: ""
      description: Build dependencies to be prefetched by Cachi2
      name: prefetch-input
      type: string
    - default: ""
      description: Image tag expiration time, time values could be something like
        1h, 2d, 3w for hours, days, and weeks, respectively.
      name: image-expires-after
    - default: "false"
      description: Build a source image.
      name: build-source-image
      type: string
    - default: "false"
      description: Add built image into an OCI image index
      name: build-image-index
      type: string
    - default: []
      description: Array of --build-arg values ("arg=value" strings) for buildah
      name: build-args
      type: array
    - default: ""
      description: Path to a file with build arguments for buildah, see https://www.mankier.com/1/buildah-build#--build-arg-file
      name: build-args-file
      type: string
    results:
    - description: ""
      name: IMAGE_URL
      value: $(tasks.build-image-index.results.IMAGE_URL)
    - description: ""
      name: IMAGE_DIGEST
      value: $(tasks.build-image-index.results.IMAGE_DIGEST)
    - description: ""
      name: CHAINS-GIT_URL
      value: $(tasks.clone-repository.results.url)
    - description: ""
      name: CHAINS-GIT_COMMIT
      value: $(tasks.clone-repository.results.commit)
    tasks:
    - name: rhoai-init
      params:
      - name: pipelinerun-name
        value: "$(context.pipelineRun.name)"
      taskSpec:
        results:
        - description: Notification text to be posted to slack
          name: slack-message-failure-text
        steps:
        - image: alpine
          name: rhoai-init
          script: |
            pipelinerun_name=$(params.pipelinerun-name)
            target_branch={{target_branch}}
            echo "pipelinerun-name = $pipelinerun_name"

            application_name=${target_branch/rhoai-/}
            application_name=rhoai-v${application_name/./-}
            echo "application-name = $application_name"

            component_name=${pipelinerun_name/-on-*/}
            echo "component-name = $component_name"

            KONFLUX_SERVER="https://konflux.apps.stone-prod-p02.hjvn.p1.openshiftapps.com"
            build_url="${KONFLUX_SERVER}/application-pipeline/workspaces/rhoai/applications/${application_name}/pipelineruns/${pipelinerun_name}/logs"

            alertEmoji=":alert:"
            statusText="Failed"
            statusEmoji=":failed:"

            build_time="$(date +%Y-%m-%dT%H:%M:%S)"
            slack_message="${alertEmoji} <${build_url}|${pipelinerun_name}> - ${build_time}"
            slack_message=$(echo -e "${slack_message}\nStatus: ${statusText} ${statusEmoji}")

            echo -n "${slack_message}" > "$(results.slack-message-failure-text.path)"
    - name: init
      params:
      - name: image-url
        value: $(params.output-image)
      - name: rebuild
        value: $(params.rebuild)
      - name: skip-checks
        value: "false"
      taskRef:
        params:
        - name: name
          value: init
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-init:0.2@sha256:38660e69f8a8b8bedc0264964d8811e1faaaaaa03a9fc908e811bf8f705f393a
        - name: kind
          value: task
        resolver: bundles
      runAfter:
      - rhoai-init
    - name: clone-repository
      params:
      - name: url
        value: $(params.git-url)
      - name: revision
        value: $(params.revision)
      runAfter:
      - init
      taskRef:
        params:
        - name: name
          value: git-clone
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-git-clone:0.1@sha256:3ced9a6b9d8520773d3ffbf062190515a362ecda11e72f56e38e4dd980294b57
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - "true"
      workspaces:
      - name: output
        workspace: workspace
      - name: basic-auth
        workspace: git-auth
    - name: custom-task
      taskSpec:
        steps:
        - image: alpine
          name: hello
          script: |
            echo "Hello World!"
            exit 1
      runAfter:
      - clone-repository
    - name: prefetch-dependencies
      params:
      - name: input
        value: $(params.prefetch-input)
      runAfter:
      - custom-task
      taskRef:
        params:
        - name: name
          value: prefetch-dependencies
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-prefetch-dependencies:0.1@sha256:25fd79bea30bcf457d0f0c072181e3221600fb497d91427ab5b961633b6dcbe5
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.prefetch-input)
        operator: notin
        values:
        - ""
      workspaces:
      - name: source
        workspace: workspace
      - name: git-basic-auth
        workspace: git-auth
      - name: netrc
        workspace: netrc
    - name: build-container
      params:
      - name: IMAGE
        value: $(params.output-image)
      - name: DOCKERFILE
        value: $(params.dockerfile)
      - name: CONTEXT
        value: $(params.path-context)
      - name: HERMETIC
        value: $(params.hermetic)
      - name: PREFETCH_INPUT
        value: $(params.prefetch-input)
      - name: IMAGE_EXPIRES_AFTER
        value: $(params.image-expires-after)
      - name: COMMIT_SHA
        value: $(tasks.clone-repository.results.commit)
      - name: BUILD_ARGS
        value:
        - $(params.build-args[*])
      - name: BUILD_ARGS_FILE
        value: $(params.build-args-file)
      - name: LABELS
        value:
        - version=v2.13.0
        - url=$(params.git-url)
        - git.url=$(params.git-url)
        - git.commit=$(params.revision)
        - release='$(tasks.clone-repository.results.commit-timestamp)'
      runAfter:
      - prefetch-dependencies
      taskRef:
        params:
        - name: name
          value: buildah
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-buildah:0.1@sha256:83fb8cf4f1295d887bba7a20c57d3a75a3045db17597e89f092744738f4e7a88
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - "true"
      workspaces:
      - name: source
        workspace: workspace
    - name: build-image-index
      params:
      - name: IMAGE
        value: $(params.output-image)
      - name: COMMIT_SHA
        value: $(tasks.clone-repository.results.commit)
      - name: IMAGE_EXPIRES_AFTER
        value: $(params.image-expires-after)
      - name: ALWAYS_BUILD_INDEX
        value: $(params.build-image-index)
      - name: IMAGES
        value:
        - $(tasks.build-container.results.IMAGE_URL)@$(tasks.build-container.results.IMAGE_DIGEST)
      runAfter:
      - build-container
      taskRef:
        params:
        - name: name
          value: build-image-index
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-build-image-index:0.1@sha256:4d5ab47286c1c7ac525786c9a4d0cce9fc73f22635cd623f1d2d12ebc76d83e5
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - "true"
    - name: build-source-image
      params:
      - name: BINARY_IMAGE
        value: $(params.output-image)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: source-build
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-source-build:0.1@sha256:44debcd1ec78ec4b30646c42bc077fcd79c2b32bc4b9431ee514517d17410a43
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - "true"
      - input: $(params.build-source-image)
        operator: in
        values:
        - "true"
      workspaces:
      - name: workspace
        workspace: workspace
    - name: deprecated-base-image-check
      params:
      - name: IMAGE_URL
        value: $(tasks.build-image-index.results.IMAGE_URL)
      - name: IMAGE_DIGEST
        value: $(tasks.build-image-index.results.IMAGE_DIGEST)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: deprecated-image-check
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-deprecated-image-check:0.4@sha256:e66184e4b839fdacafddda7320d5249b9b8d349a3b3950ad98b6772c6001c46a
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
    - name: clair-scan
      params:
      - name: image-digest
        value: $(tasks.build-image-index.results.IMAGE_DIGEST)
      - name: image-url
        value: $(tasks.build-image-index.results.IMAGE_URL)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: clair-scan
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-clair-scan:0.2@sha256:712afcf63f3b5a97c371d37e637efbcc9e1c7ad158872339d00adc6413cd8851
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
    - name: ecosystem-cert-preflight-checks
      params:
      - name: image-url
        value: $(tasks.build-image-index.results.IMAGE_URL)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: ecosystem-cert-preflight-checks
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-ecosystem-cert-preflight-checks:0.1@sha256:7c2438c6201ee803de361fa2e9182fdc759126d5bc010abbbddf5aa40c7adc3c
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
    - name: sast-snyk-check
      params:
      - name: image-digest
        value: $(tasks.build-image-index.results.IMAGE_DIGEST)
      - name: image-url
        value: $(tasks.build-image-index.results.IMAGE_URL)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: sast-snyk-check
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-sast-snyk-check:0.3@sha256:e0c1675c9813618910115f04fd6b3a9ff32d1bd4e2b9c975f1112aa1eae0d149
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
      workspaces:
      - name: workspace
        workspace: workspace
    - name: clamav-scan
      params:
      - name: image-digest
        value: $(tasks.build-image-index.results.IMAGE_DIGEST)
      - name: image-url
        value: $(tasks.build-image-index.results.IMAGE_URL)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: clamav-scan
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-clamav-scan:0.1@sha256:13a8ab0c7d1155555d6443b82d0a47000c7bc2b0f527327b3b6d5279e3cc1f1e
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
    - name: apply-tags
      params:
      - name: IMAGE
        value: $(tasks.build-image-index.results.IMAGE_URL)
      - name: ADDITIONAL_TAGS
        value:
        - '{{target_branch}}-{{revision}}'
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: apply-tags
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-apply-tags:0.1@sha256:4973fa42a8f06238613447fbdb3d0c55eb2d718fd16f2f2591a577c29c1edb17
        - name: kind
          value: task
        resolver: bundles
    - name: push-dockerfile
      params:
      - name: IMAGE
        value: $(tasks.build-image-index.results.IMAGE_URL)
      - name: IMAGE_DIGEST
        value: $(tasks.build-image-index.results.IMAGE_DIGEST)
      - name: DOCKERFILE
        value: $(params.dockerfile)
      - name: CONTEXT
        value: $(params.path-context)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: push-dockerfile
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-push-dockerfile:0.1@sha256:6124587dffebd15b2123f73ca25807c5e69ff349489b31d4af6ff46a5d0228d6
        - name: kind
          value: task
        resolver: bundles
      workspaces:
      - name: workspace
        workspace: workspace
    workspaces:
    - name: workspace
    - name: git-auth
      optional: true
    - name: netrc
      optional: true
  taskRunTemplate: {}
  workspaces:
  - name: workspace
    volumeClaimTemplate:
      metadata:
        creationTimestamp:
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      status: {}
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
